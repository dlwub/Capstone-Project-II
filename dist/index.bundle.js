"use strict";(self.webpackChunkcapstone_project_ii=self.webpackChunkcapstone_project_ii||[]).push([[826],{424:(n,e,t)=>{t.d(e,{Z:()=>s});var o=t(537),r=t.n(o),a=t(645),i=t.n(a)()(r());i.push([n.id,"@import url(https://fonts.googleapis.com/css2?family=Noto+Sans+Buhid&display=swap);"]),i.push([n.id,"@import url(https://fonts.googleapis.com/css2?family=Anton&display=swap);"]),i.push([n.id,"@import url(https://fonts.googleapis.com/css2?family=Permanent+Marker&display=swap);"]),i.push([n.id,"* {\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  background-color: aliceblue;\n}\n\n.nav {\n  background-color: aliceblue;\n  height: 100px;\n  width: 100%;\n  border: 1px solid #242b2e;\n  margin-top: -10px;\n}\n\n.list {\n  display: flex;\n  list-style: none;\n  justify-content: flex-end;\n  margin-top: -70px;\n  gap: 200px;\n  margin-right: 40px;\n}\n\n.list li {\n  font-size: 25px;\n  color: #758283;\n  text-decoration: none;\n  font-family: 'Noto Sans Buhid', sans-serif;\n  cursor: pointer;\n}\n\n.list li:hover {\n  border: 6px solid #758283;\n  color: #b4161b;\n  border-radius: 20px;\n  font-family: 'Permanent Marker', cursive;\n}\n\n.movie-api {\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  flex-wrap: wrap;\n  gap: 150px;\n}\n\n.movieli {\n  display: flex;\n  flex-direction: column;\n}\n\n.img {\n  width: 250px;\n  height: 400px;\n  cursor: pointer;\n  border-radius: 15px 15px;\n}\n.img:hover {\n  animation: bounce 1s linear;\n  opacity: 0.8;\n}\n\n@keyframes bounce {\n  0% {\n    transform: scale(1, 1) translateY(0);\n  }\n  10% {\n    transform: scale(1.1, 0.9) translateY(0);\n  }\n  30% {\n    transform: scale(0.9, 1.1) translateY(-100px);\n  }\n  50% {\n    transform: scale(1, 1) translateY(0);\n  }\n  100% {\n    transform: scale(1, 1) translateY(0);\n  }\n}\n\n.comments-btn1 {\n  color: #758283;\n  width: 250px;\n  height: 40px;\n  border-radius: 30px;\n  margin-top: 20px;\n  font-size: 20px;\n  font-family: 'Noto Sans Buhid', sans-serif;\n}\n\n.comments-btn1:hover {\n  border: 3px solid #758283;\n  color: #b4161b;\n  border-radius: 25px;\n  font-family: 'Permanent Marker', cursive;\n  border-radius: 10px;\n  background-color: #eef2e6;\n}\n\n.likes-btn {\n  margin-top: 10px;\n  width: 60px;\n  margin-left: 170px;\n  font-size: 20px;\n  border: none;\n  cursor: pointer;\n}\n\n.name {\n  color: #b4161b;\n  font-size: 30px;\n  font-family: 'Anton', sans-serif;\n  text-align: center;\n}\n","",{version:3,sources:["webpack://./src/index.css"],names:[],mappings:"AAIA;EACE,MAAM;EACN,SAAS;EACT,OAAO;EACP,QAAQ;EACR,2BAA2B;AAC7B;;AAEA;EACE,2BAA2B;EAC3B,aAAa;EACb,WAAW;EACX,yBAAyB;EACzB,iBAAiB;AACnB;;AAEA;EACE,aAAa;EACb,gBAAgB;EAChB,yBAAyB;EACzB,iBAAiB;EACjB,UAAU;EACV,kBAAkB;AACpB;;AAEA;EACE,eAAe;EACf,cAAc;EACd,qBAAqB;EACrB,0CAA0C;EAC1C,eAAe;AACjB;;AAEA;EACE,yBAAyB;EACzB,cAAc;EACd,mBAAmB;EACnB,wCAAwC;AAC1C;;AAEA;EACE,aAAa;EACb,6BAA6B;EAC7B,mBAAmB;EACnB,eAAe;EACf,UAAU;AACZ;;AAEA;EACE,aAAa;EACb,sBAAsB;AACxB;;AAEA;EACE,YAAY;EACZ,aAAa;EACb,eAAe;EACf,wBAAwB;AAC1B;AACA;EACE,2BAA2B;EAC3B,YAAY;AACd;;AAEA;EACE;IACE,oCAAoC;EACtC;EACA;IACE,wCAAwC;EAC1C;EACA;IACE,6CAA6C;EAC/C;EACA;IACE,oCAAoC;EACtC;EACA;IACE,oCAAoC;EACtC;AACF;;AAEA;EACE,cAAc;EACd,YAAY;EACZ,YAAY;EACZ,mBAAmB;EACnB,gBAAgB;EAChB,eAAe;EACf,0CAA0C;AAC5C;;AAEA;EACE,yBAAyB;EACzB,cAAc;EACd,mBAAmB;EACnB,wCAAwC;EACxC,mBAAmB;EACnB,yBAAyB;AAC3B;;AAEA;EACE,gBAAgB;EAChB,WAAW;EACX,kBAAkB;EAClB,eAAe;EACf,YAAY;EACZ,eAAe;AACjB;;AAEA;EACE,cAAc;EACd,eAAe;EACf,gCAAgC;EAChC,kBAAkB;AACpB",sourcesContent:["@import url('https://fonts.googleapis.com/css2?family=Noto+Sans+Buhid&display=swap');\n@import url('https://fonts.googleapis.com/css2?family=Anton&display=swap');\n@import url('https://fonts.googleapis.com/css2?family=Permanent+Marker&display=swap');\n\n* {\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  background-color: aliceblue;\n}\n\n.nav {\n  background-color: aliceblue;\n  height: 100px;\n  width: 100%;\n  border: 1px solid #242b2e;\n  margin-top: -10px;\n}\n\n.list {\n  display: flex;\n  list-style: none;\n  justify-content: flex-end;\n  margin-top: -70px;\n  gap: 200px;\n  margin-right: 40px;\n}\n\n.list li {\n  font-size: 25px;\n  color: #758283;\n  text-decoration: none;\n  font-family: 'Noto Sans Buhid', sans-serif;\n  cursor: pointer;\n}\n\n.list li:hover {\n  border: 6px solid #758283;\n  color: #b4161b;\n  border-radius: 20px;\n  font-family: 'Permanent Marker', cursive;\n}\n\n.movie-api {\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  flex-wrap: wrap;\n  gap: 150px;\n}\n\n.movieli {\n  display: flex;\n  flex-direction: column;\n}\n\n.img {\n  width: 250px;\n  height: 400px;\n  cursor: pointer;\n  border-radius: 15px 15px;\n}\n.img:hover {\n  animation: bounce 1s linear;\n  opacity: 0.8;\n}\n\n@keyframes bounce {\n  0% {\n    transform: scale(1, 1) translateY(0);\n  }\n  10% {\n    transform: scale(1.1, 0.9) translateY(0);\n  }\n  30% {\n    transform: scale(0.9, 1.1) translateY(-100px);\n  }\n  50% {\n    transform: scale(1, 1) translateY(0);\n  }\n  100% {\n    transform: scale(1, 1) translateY(0);\n  }\n}\n\n.comments-btn1 {\n  color: #758283;\n  width: 250px;\n  height: 40px;\n  border-radius: 30px;\n  margin-top: 20px;\n  font-size: 20px;\n  font-family: 'Noto Sans Buhid', sans-serif;\n}\n\n.comments-btn1:hover {\n  border: 3px solid #758283;\n  color: #b4161b;\n  border-radius: 25px;\n  font-family: 'Permanent Marker', cursive;\n  border-radius: 10px;\n  background-color: #eef2e6;\n}\n\n.likes-btn {\n  margin-top: 10px;\n  width: 60px;\n  margin-left: 170px;\n  font-size: 20px;\n  border: none;\n  cursor: pointer;\n}\n\n.name {\n  color: #b4161b;\n  font-size: 30px;\n  font-family: 'Anton', sans-serif;\n  text-align: center;\n}\n"],sourceRoot:""}]);const s=i},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",o=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),o&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),o&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,o,r,a){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(o)for(var s=0;s<this.length;s++){var A=this[s][0];null!=A&&(i[A]=!0)}for(var c=0;c<n.length;c++){var l=[].concat(n[c]);o&&i[l[0]]||(void 0!==a&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=a),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),r&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=r):l[4]="".concat(r)),e.push(l))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),a="/*# ".concat(r," */"),i=t.sources.map((function(n){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(n," */")}));return[e].concat(i).concat([a]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,o=0;o<e.length;o++)if(e[o].identifier===n){t=o;break}return t}function o(n,o){for(var a={},i=[],s=0;s<n.length;s++){var A=n[s],c=o.base?A[0]+o.base:A[0],l=a[c]||0,p="".concat(c," ").concat(l);a[c]=l+1;var d=t(p),u={css:A[1],media:A[2],sourceMap:A[3],supports:A[4],layer:A[5]};if(-1!==d)e[d].references++,e[d].updater(u);else{var m=r(u,o);o.byIndex=s,e.splice(s,0,{identifier:p,updater:m,references:1})}i.push(p)}return i}function r(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,r){var a=o(n=n||[],r=r||{});return function(n){n=n||[];for(var i=0;i<a.length;i++){var s=t(a[i]);e[s].references--}for(var A=o(n,r),c=0;c<a.length;c++){var l=t(a[c]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}a=A}}},569:n=>{var e={};n.exports=function(n,t){var o=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,r&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(o,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},253:(n,e,t)=>{var o=t(379),r=t.n(o),a=t(795),i=t.n(a),s=t(569),A=t.n(s),c=t(565),l=t.n(c),p=t(216),d=t.n(p),u=t(589),m=t.n(u),f=t(424),C={};C.styleTagTransform=m(),C.setAttributes=l(),C.insert=A().bind(null,"head"),C.domAPI=i(),C.insertStyleElement=d(),r()(f.Z,C),f.Z&&f.Z.locals&&f.Z.locals;const E=t.p+"img/logo.png",h=document.querySelector(".movie-api"),g=async n=>{const e=`https://api.tvmaze.com/shows/${n}`,t=await fetch(e);!function(n){const e=document.createElement("div");e.classList.add("movie");const t=`\n  <div class="movieli">\n  <h2 class="name">${n.name}</h2>\n  <img src="${n.image.medium}" alt="img" class="img">\n  <button type="button" class="likes-btn" id="${n.id}"> <span class="likeI"><i class="fa-regular fa-heart"></i></span>\n  <span class="count">0</span></button>\n  <button type="button" class="comments-btn1">Comments</button>\n  </div>\n  `;e.innerHTML=t,h.appendChild(e)}(await t.json())};(async()=>{for(let n=1;n<10;n+=1)await g(n)})();const b=document.createElement("img");b.src=E,document.querySelector("nav").prepend(b),document.querySelector(".movieli");const y=async()=>{const n=await fetch("https://us-central1-involvement-api.cloudfunctions.net/capstoneApi/apps/dRWqh227u7lkZF9bzt9m/likes/"),e=await n.json();document.querySelectorAll(".likes-btn").forEach((n=>{e.forEach((e=>{e.item_id==n.id&&(n.children[1].innerHTML=e.likes)}))})),window.addEventListener("click",(n=>{n.target.classList.contains("likes-btn")&&(console.log("hi"),x(n.target.id),n.target.children[0].innerHTML='<i class="fa-solid fa-heart" style="color:red"></i>',e.forEach((e=>{e.item_id==n.target.id&&(n.target.children[1].innerHTML=e.likes)})))}))},x=async n=>{const e={item_id:`${n}`};console.log(n),await fetch("https://us-central1-involvement-api.cloudfunctions.net/capstoneApi/apps/dRWqh227u7lkZF9bzt9m/likes/",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)}),y()};window.addEventListener("DOMContentLoaded",y)}},n=>{n(n.s=253)}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,